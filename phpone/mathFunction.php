<?php

//乘方函数，幂函数   pow()
echo pow(2,3),'<br>';
//2的3次方，也就是3个2相乘
//第二个参数，也就是乘方，此处可以为小数
//参数理论上应该是数字类型，如果是其他类型，会自动转化为数字类型


//求平方根函数  sqrt()
//负数没有平方根，如果参数是负数，返回值为NAN，表示不存在
echo sqrt(9),'<br>';


//求绝对值函数  abs()
//正数的绝对值是其本身，负数的绝对值是正数，0的绝对值是0
echo abs(-10),'<br>';


//最大值函数 max() , 最小值函数 min()
//第一种情况，参数是数组，会在数组中的所有存储数值中，找到最大值或者最小值
$arr = [234,35543,65463,3423,44,234324,00,745,];
//找到数组中存储数据的最大值
echo max($arr);
//找到数组中存储数据的最小值
echo min($arr),'<br>';
//
//第二种情况，参数是多个变量，找到存储数据最大或最小的变量，输出存储的数值
$int1 = 1;
$int2 = 2;
$int3 = 3;
$int4 = 4;
$int5 = 5;
$int6 = 6;
//找到所有变量中存储数据的最大值
echo max($int1,$int2,$int3),'<br>';
//找到所有变量中存储数据的最小值
echo min($int4,$int5,$int6);


//哈希散列值  md5()  sha1()
//通过特殊的算法，将字符串，转化为固定的内容，是一组十六进制的数字组成的字符串
//
//md5() 将字符串转化为固定的32位哈散列值
//sha1() 将字符串转化为固定的40位哈希散列值
//
//数据库中存储的敏感信息，必须使用秘文存储，需要经过加密
//
//目前，我们只能使用md5()或者sha1()进行加密
//
// 正常的加密算法，包括加密和解密两个算法
//
// md5()和sha1()只有加密没有解密
$int = 1234;
echo md5($int),'<br>';
echo sha1($int),'<br>';


// 随机数函数 mt_rand()
//
//第一种情况 没有参数 0-2^31-1
//           2^32-1 是32位系统的最大整数值
echo mt_rand(),'<br>';
// 第二种情况 有2个参数 第一个数较小，第二个数较大
//
// 生成两个数值之间的随机整数，并且包括两个数值
//随机生成1-5的整数，包括1和5
echo mt_rand(1,7),'<br>';
//注意：生成的数值和参数都只能是整数，如果需要生成小数，除以10,100,1000等数值
// 例如，需要生成 0.01-0.99之间所有的小数
//等于是 生成1-99的整数，再除以100
echo mt_rand(1,99) / 100,'<br>';